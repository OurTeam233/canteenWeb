<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间为全类名-->
<mapper namespace="com.mapper.UserMapper">
    <resultMap id="UserResultMap" type="User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="userTypes" property="userTypes"/>
        <result column="relation_id" property="relationId"/>
    </resultMap>

    <resultMap id="StudentInfoResultMap" type="studentInfo">
        <result property="className" column="className"/>
        <result property="departmentName" column="departmentName"/>
        <result property="sequence" column="sequence"/>
    </resultMap>

    <insert id="insertUser" useGeneratedKeys="true">
        INSERT INTO user(username, password, userTypes, relation_id)
        VALUES(#{username}, MD5(#{password}), 2, #{relationId})
    </insert>

    <update id="updateUser">
        UPDATE user
        SET username = #{username}, password = MD5(#{password})
        WHERE id = #{id}
    </update>

    <delete id="deleteUser">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <select id="selectUserStore" resultMap="UserResultMap">
        SELECT id, userName, userTypes, password, relation_id
        FROM `user`
        WHERE userName = #{username}
          AND `password` = MD5(#{password})
    </select>

    <select id="selectUserStudent" resultMap="StudentInfoResultMap">
        SELECT sc.NAME      className,
               d.simpleName departmentName,
               si.sequence
        FROM studentclass sc
                 LEFT JOIN department d ON sc.department_id = d.id
                 LEFT JOIN studentinfo si ON si.studentclass_id = sc.id
        WHERE sequence = #{sequence}
          AND d.simpleName = #{departmentName}
          AND sc.NAME = #{className}
    </select>

    <select id="selectUser" resultMap="UserResultMap">
        SELECT id, userName, userTypes, relation_id
        FROM `user`
        WHERE userTypes = '2'
    </select>

    <select id="selectByUsername" resultMap="UserResultMap">
        SELECT id, userName, userTypes, password, relation_id
        FROM `user`
        WHERE userName = #{username}
    </select>

    <select id="selectById" resultMap="UserResultMap">
        SELECT id, userName, userTypes, password, relation_id
        FROM `user`
        WHERE id = #{id}
    </select>
</mapper>